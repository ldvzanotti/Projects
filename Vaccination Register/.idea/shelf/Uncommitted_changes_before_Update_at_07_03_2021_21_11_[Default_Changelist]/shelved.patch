Index: ../Mars Rover Control/.idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Mars Rover Control/.idea/.gitignore b/../Mars Rover Control/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1614291110611)
+++ b/../Mars Rover Control/.idea/.gitignore	(date 1614291110611)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Datasource local storage ignored files
+/../../../../:\Projetos\Mars Rover Control\.idea/dataSources/
+/dataSources.local.xml
+# Editor-based HTTP Client requests
+/httpRequests/
Index: ../Mars Rover Control/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Mars Rover Control/.idea/misc.xml b/../Mars Rover Control/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1614291103607)
+++ b/../Mars Rover Control/.idea/misc.xml	(date 1614291103607)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CodeInsightWorkspaceSettings">
+    <option name="optimizeImportsOnTheFly" value="true" />
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_15" default="true" project-jdk-name="15" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: ../Mars Rover Control/.idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Mars Rover Control/.idea/vcs.xml b/../Mars Rover Control/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1614291106107)
+++ b/../Mars Rover Control/.idea/vcs.xml	(date 1614291106107)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: ../Mars Rover Control/Mars Rover Control.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Mars Rover Control/Mars Rover Control.iml b/../Mars Rover Control/Mars Rover Control.iml
new file mode 100644
--- /dev/null	(date 1614291103575)
+++ b/../Mars Rover Control/Mars Rover Control.iml	(date 1614291103575)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: ../Mars Rover Control/.idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Mars Rover Control/.idea/modules.xml b/../Mars Rover Control/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1614291103591)
+++ b/../Mars Rover Control/.idea/modules.xml	(date 1614291103591)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/Mars Rover Control.iml" filepath="$PROJECT_DIR$/Mars Rover Control.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: ../Mars Rover Control/.idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Mars Rover Control/.idea/uiDesigner.xml b/../Mars Rover Control/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	(date 1614291326388)
+++ b/../Mars Rover Control/.idea/uiDesigner.xml	(date 1614291326388)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: ../Mars Rover Control/src/ControlPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Mars Rover Control/src/ControlPanel.java b/../Mars Rover Control/src/ControlPanel.java
new file mode 100644
--- /dev/null	(date 1614782882891)
+++ b/../Mars Rover Control/src/ControlPanel.java	(date 1614782882891)
@@ -0,0 +1,13 @@
+import javax.swing.*;
+
+public class ControlPanel extends JFrame {
+	private JButton submitCommandsButton;
+	private JTextArea inputText;
+	private JTextPane outputText;
+	private JPanel controlPane;
+
+	public ControlPanel() {
+		add(controlPane);
+		setSize(1200, 800);
+	}
+}
Index: ../Mars Rover Control/src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Mars Rover Control/src/Main.java b/../Mars Rover Control/src/Main.java
new file mode 100644
--- /dev/null	(date 1614295364513)
+++ b/../Mars Rover Control/src/Main.java	(date 1614295364513)
@@ -0,0 +1,11 @@
+import javax.swing.*;
+
+public class Main {
+
+	public static void main (String[] args) throws ClassNotFoundException, UnsupportedLookAndFeelException, InstantiationException, IllegalAccessException {
+		UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
+		ControlPanel cp = new ControlPanel();
+		cp.setVisible(true);
+
+	}
+}
Index: ../Mars Rover Control/src/ControlPanel.form
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Mars Rover Control/src/ControlPanel.form b/../Mars Rover Control/src/ControlPanel.form
new file mode 100644
--- /dev/null	(date 1614782829915)
+++ b/../Mars Rover Control/src/ControlPanel.form	(date 1614782829915)
@@ -0,0 +1,92 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="ControlPanel">
+  <grid id="27dc6" binding="controlPane" layout-manager="GridLayoutManager" row-count="5" column-count="2" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="5" left="5" bottom="5" right="5"/>
+    <constraints>
+      <xy x="55" y="66" width="788" height="547"/>
+    </constraints>
+    <properties/>
+    <border type="bevel-raised" title="" title-justification="1" title-position="1">
+      <font/>
+    </border>
+    <children>
+      <component id="45ed" class="javax.swing.JButton" binding="submitCommandsButton" default-binding="true">
+        <constraints>
+          <grid row="2" column="1" row-span="1" col-span="1" vsize-policy="1" hsize-policy="3" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="Submit commands"/>
+        </properties>
+      </component>
+      <component id="cf9b" class="javax.swing.JTextArea" binding="inputText">
+        <constraints>
+          <grid row="1" column="1" row-span="1" col-span="1" vsize-policy="6" hsize-policy="2" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <preferred-size width="150" height="50"/>
+          </grid>
+        </constraints>
+        <properties>
+          <background color="-16777216"/>
+          <font name="Consolas" size="12" style="1"/>
+          <foreground color="-16736762"/>
+        </properties>
+      </component>
+      <grid id="ded84" layout-manager="GridLayoutManager" row-count="1" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+        <margin top="0" left="0" bottom="0" right="0"/>
+        <constraints>
+          <grid row="1" column="0" row-span="4" col-span="1" vsize-policy="3" hsize-policy="3" anchor="0" fill="1" indent="0" use-parent-layout="true">
+            <preferred-size width="800" height="800"/>
+          </grid>
+        </constraints>
+        <properties>
+          <background color="-16777216"/>
+        </properties>
+        <border type="none" title-justification="2" title-position="1">
+          <font name="Consolas" size="12" style="1"/>
+          <title-color color="-64730"/>
+        </border>
+        <children/>
+      </grid>
+      <component id="a708d" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="0" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <horizontalAlignment value="0"/>
+          <horizontalTextPosition value="11"/>
+          <text value="Command input"/>
+        </properties>
+      </component>
+      <component id="29499" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="Visual"/>
+        </properties>
+      </component>
+      <component id="1c65e" class="javax.swing.JTextPane" binding="outputText">
+        <constraints>
+          <grid row="4" column="1" row-span="1" col-span="1" vsize-policy="6" hsize-policy="2" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <preferred-size width="150" height="50"/>
+          </grid>
+        </constraints>
+        <properties>
+          <background color="-16777216"/>
+          <enabled value="false"/>
+          <foreground color="-1"/>
+          <toolTipText value=""/>
+        </properties>
+      </component>
+      <component id="c78a9" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="3" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <horizontalAlignment value="10"/>
+          <text value="System output"/>
+          <verticalAlignment value="0"/>
+        </properties>
+      </component>
+    </children>
+  </grid>
+</form>
Index: ../Mars Rovers/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Mars Rovers/.idea/misc.xml b/../Mars Rovers/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1614204690304)
+++ b/../Mars Rovers/.idea/misc.xml	(date 1614204690304)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CodeInsightWorkspaceSettings">
+    <option name="optimizeImportsOnTheFly" value="true" />
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_15" default="true" project-jdk-name="15" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: ../Meteor/Meteor.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Meteor/Meteor.iml b/../Meteor/Meteor.iml
new file mode 100644
--- /dev/null	(date 1614721255084)
+++ b/../Meteor/Meteor.iml	(date 1614721255084)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: ../Mars Rovers/.idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Mars Rovers/.idea/modules.xml b/../Mars Rovers/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1614204690282)
+++ b/../Mars Rovers/.idea/modules.xml	(date 1614204690282)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/Mars Rovers.iml" filepath="$PROJECT_DIR$/Mars Rovers.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: ../Forum/.mvn/wrapper/MavenWrapperDownloader.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n * Copyright 2007-present the original author or authors.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport java.net.*;\r\nimport java.io.*;\r\nimport java.nio.channels.*;\r\nimport java.util.Properties;\r\n\r\npublic class MavenWrapperDownloader {\r\n\r\n\tprivate static final String WRAPPER_VERSION = \"0.5.6\";\r\n\t/**\r\n\t * Default URL to download the maven-wrapper.jar from, if no 'downloadUrl' is provided.\r\n\t */\r\n\tprivate static final String DEFAULT_DOWNLOAD_URL = \"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/\"\r\n\t\t\t+ WRAPPER_VERSION + \"/maven-wrapper-\" + WRAPPER_VERSION + \".jar\";\r\n\r\n\t/**\r\n\t * Path to the maven-wrapper.properties file, which might contain a downloadUrl property to\r\n\t * use instead of the default one.\r\n\t */\r\n\tprivate static final String MAVEN_WRAPPER_PROPERTIES_PATH =\r\n\t\t\t\".mvn/wrapper/maven-wrapper.properties\";\r\n\r\n\t/**\r\n\t * Path where the maven-wrapper.jar will be saved to.\r\n\t */\r\n\tprivate static final String MAVEN_WRAPPER_JAR_PATH =\r\n\t\t\t\".mvn/wrapper/maven-wrapper.jar\";\r\n\r\n\t/**\r\n\t * Name of the property which should be used to override the default download url for the wrapper.\r\n\t */\r\n\tprivate static final String PROPERTY_NAME_WRAPPER_URL = \"wrapperUrl\";\r\n\r\n\tpublic static void main (String args[]) {\r\n\t\tSystem.out.println(\"- Downloader started\");\r\n\t\tFile baseDirectory = new File(args[0]);\r\n\t\tSystem.out.println(\"- Using base directory: \" + baseDirectory.getAbsolutePath());\r\n\r\n\t\t// If the maven-wrapper.properties exists, read it and check if it contains a custom\r\n\t\t// wrapperUrl parameter.\r\n\t\tFile mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);\r\n\t\tString url = DEFAULT_DOWNLOAD_URL;\r\n\t\tif (mavenWrapperPropertyFile.exists()) {\r\n\t\t\tFileInputStream mavenWrapperPropertyFileInputStream = null;\r\n\t\t\ttry {\r\n\t\t\t\tmavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);\r\n\t\t\t\tProperties mavenWrapperProperties = new Properties();\r\n\t\t\t\tmavenWrapperProperties.load(mavenWrapperPropertyFileInputStream);\r\n\t\t\t\turl = mavenWrapperProperties.getProperty(PROPERTY_NAME_WRAPPER_URL, url);\r\n\t\t\t} catch (IOException e) {\r\n\t\t\t\tSystem.out.println(\"- ERROR loading '\" + MAVEN_WRAPPER_PROPERTIES_PATH + \"'\");\r\n\t\t\t} finally {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (mavenWrapperPropertyFileInputStream != null) {\r\n\t\t\t\t\t\tmavenWrapperPropertyFileInputStream.close();\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (IOException e) {\r\n\t\t\t\t\t// Ignore ...\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tSystem.out.println(\"- Downloading from: \" + url);\r\n\r\n\t\tFile outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);\r\n\t\tif (! outputFile.getParentFile().exists()) {\r\n\t\t\tif (! outputFile.getParentFile().mkdirs()) {\r\n\t\t\t\tSystem.out.println(\r\n\t\t\t\t\t\t\"- ERROR creating output directory '\" + outputFile.getParentFile().getAbsolutePath() + \"'\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tSystem.out.println(\"- Downloading to: \" + outputFile.getAbsolutePath());\r\n\t\ttry {\r\n\t\t\tdownloadFileFromURL(url, outputFile);\r\n\t\t\tSystem.out.println(\"Done\");\r\n\t\t\tSystem.exit(0);\r\n\t\t} catch (Throwable e) {\r\n\t\t\tSystem.out.println(\"- Error downloading\");\r\n\t\t\te.printStackTrace();\r\n\t\t\tSystem.exit(1);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static void downloadFileFromURL (String urlString, File destination) throws Exception {\r\n\t\tif (System.getenv(\"MVNW_USERNAME\") != null && System.getenv(\"MVNW_PASSWORD\") != null) {\r\n\t\t\tString username = System.getenv(\"MVNW_USERNAME\");\r\n\t\t\tchar[] password = System.getenv(\"MVNW_PASSWORD\").toCharArray();\r\n\t\t\tAuthenticator.setDefault(new Authenticator() {\r\n\t\t\t\t@Override\r\n\t\t\t\tprotected PasswordAuthentication getPasswordAuthentication () {\r\n\t\t\t\t\treturn new PasswordAuthentication(username, password);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tURL website = new URL(urlString);\r\n\t\tReadableByteChannel rbc;\r\n\t\trbc = Channels.newChannel(website.openStream());\r\n\t\tFileOutputStream fos = new FileOutputStream(destination);\r\n\t\tfos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);\r\n\t\tfos.close();\r\n\t\trbc.close();\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Forum/.mvn/wrapper/MavenWrapperDownloader.java b/../Forum/.mvn/wrapper/MavenWrapperDownloader.java
--- a/../Forum/.mvn/wrapper/MavenWrapperDownloader.java	(revision 2dd6471e39391038693abd1314536f38b9f37c62)
+++ b/../Forum/.mvn/wrapper/MavenWrapperDownloader.java	(date 1614959197774)
@@ -14,9 +14,6 @@
  * limitations under the License.
  */
 
-import java.net.*;
-import java.io.*;
-import java.nio.channels.*;
 import java.util.Properties;
 
 public class MavenWrapperDownloader {
Index: ../Mars Rovers/.idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Mars Rovers/.idea/.gitignore b/../Mars Rovers/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1614204697395)
+++ b/../Mars Rovers/.idea/.gitignore	(date 1614204697395)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Datasource local storage ignored files
+/../../../../:\Projetos\Mars Rovers\.idea/dataSources/
+/dataSources.local.xml
+# Editor-based HTTP Client requests
+/httpRequests/
Index: ../Mars Rovers/Mars Rovers.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Mars Rovers/Mars Rovers.iml b/../Mars Rovers/Mars Rovers.iml
new file mode 100644
--- /dev/null	(date 1614204690269)
+++ b/../Mars Rovers/Mars Rovers.iml	(date 1614204690269)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: ../Mars Rovers/.idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Mars Rovers/.idea/uiDesigner.xml b/../Mars Rovers/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	(date 1614209712629)
+++ b/../Mars Rovers/.idea/uiDesigner.xml	(date 1614209712629)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: ../Mars Rovers/.idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Mars Rovers/.idea/vcs.xml b/../Mars Rovers/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1614204695340)
+++ b/../Mars Rovers/.idea/vcs.xml	(date 1614204695340)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: ../Mars Rovers/src/GpsFrame.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Mars Rovers/src/GpsFrame.java b/../Mars Rovers/src/GpsFrame.java
new file mode 100644
--- /dev/null	(date 1614209816607)
+++ b/../Mars Rovers/src/GpsFrame.java	(date 1614209816607)
@@ -0,0 +1,17 @@
+import javax.swing.*;
+
+public class GpsFrame extends JFrame {
+
+	GpsFrame () {
+
+		this.add(new ControlPanel());
+		this.setTitle("Mars rovers GPS system");
+		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
+		this.setResizable(false);
+		this.pack();
+		this.setVisible(true);
+		this.setLocationRelativeTo(null);
+	}
+
+
+}
Index: ../Mars Rovers/src/MyRover.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Mars Rovers/src/MyRover.java b/../Mars Rovers/src/MyRover.java
new file mode 100644
--- /dev/null	(date 1614291055354)
+++ b/../Mars Rovers/src/MyRover.java	(date 1614291055354)
@@ -0,0 +1,17 @@
+import javax.swing.*;
+
+public class MyRover implements Runnable {
+
+	public static void main (String[] args) {
+		SwingUtilities.invokeLater(new MyRover());
+	}
+
+	@Override
+	public void run() {
+		JFrame frame = new JFrame("Command control");
+		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
+		frame.add(new ControlPanel());
+		frame.pack();
+		frame.setVisible(true);
+	}
+}
Index: ../Mars Rovers/src/CommandInput.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Mars Rovers/src/CommandInput.java b/../Mars Rovers/src/CommandInput.java
new file mode 100644
--- /dev/null	(date 1614290998748)
+++ b/../Mars Rovers/src/CommandInput.java	(date 1614290998748)
@@ -0,0 +1,45 @@
+import javax.swing.*;
+import java.awt.*;
+import java.awt.event.ActionEvent;
+import java.awt.event.ActionListener;
+
+public class CommandInput extends JFrame implements ActionListener {
+
+	JButton button;
+	JTextField text;
+
+	CommandInput () {
+		this.setTitle("Mars rovers mission control");
+		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
+		this.setLayout(new BorderLayout());
+		this.add(text);
+		this.add(button);
+		this.setResizable(true);
+		this.pack();
+		this.setVisible(true);
+		this.setLocationRelativeTo(null);
+
+
+		//Commands text box
+		text = new JTextField();
+		text.setPreferredSize(new Dimension(150, 120));
+		text.setFont(new Font("Consolas", Font.BOLD, 30));
+		text.setForeground(Color.black);
+		text.setBackground(Color.white);
+
+		//Submit commands button
+		button = new JButton("Submit!");
+		button.addActionListener(this);
+
+
+	}
+
+
+	//Submit commands when button clicked
+	@Override
+	public void actionPerformed (ActionEvent e) {
+		if (e.getSource() == button) {
+
+		}
+	}
+}
Index: ../Mars Rovers/src/ControlPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Mars Rovers/src/ControlPanel.java b/../Mars Rovers/src/ControlPanel.java
new file mode 100644
--- /dev/null	(date 1614290998795)
+++ b/../Mars Rovers/src/ControlPanel.java	(date 1614290998795)
@@ -0,0 +1,82 @@
+import javax.swing.*;
+import java.awt.*;
+import java.awt.event.ActionEvent;
+import java.awt.event.ActionListener;
+
+public class ControlPanel extends JPanel implements ActionListener {
+	static final private int SCREEN_WIDTH = 800;
+	static final private int SCREEN_HEIGHT = 600;
+	static final private int UNITS_SIZE = 20;
+	static final private int AREA_UNITS = (SCREEN_WIDTH*SCREEN_HEIGHT)/ UNITS_SIZE;
+	final int[] x = new int[AREA_UNITS];
+	final int[] y = new int[AREA_UNITS];
+	private boolean running = false;
+	Timer timer;
+	JPanel panel = new JPanel();
+
+	public static int getUnitsSize () {
+		return UNITS_SIZE;
+	}
+
+	//Constructor
+	ControlPanel() {
+		this.setPreferredSize(new Dimension(SCREEN_WIDTH, SCREEN_HEIGHT));
+		this.setBackground(Color.BLACK);
+		this.setFocusable(true);
+		panel.setLayout(new BorderLayout());
+		startNavigation();
+	}
+
+	//Start navigator
+	public void startNavigation() {
+		this.setRunning(true);
+		timer = new Timer(100, this);
+		timer.start();
+	}
+
+	//Draw grid
+	public void printComponent(Graphics g) {
+		super.paintComponent(g);
+		draw(g);
+	}
+	//Grid settings
+	public void draw(Graphics g) {
+		if (getRunning()) {
+			for (int i = 0; i < SCREEN_HEIGHT / UNITS_SIZE; i++) {
+				g.setColor(Color.lightGray);
+				g.drawLine(i * UNITS_SIZE, 0, i * UNITS_SIZE, SCREEN_HEIGHT);
+				g.drawLine(0, i * UNITS_SIZE, SCREEN_WIDTH, i * UNITS_SIZE);
+			}
+		}
+	}
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+	@Override
+	public void actionPerformed (ActionEvent e) {
+
+	}
+
+	public boolean getRunning () {
+		return running;
+	}
+
+	public void setRunning (boolean r) {
+		this.running = r;
+	}
+}
Index: ../Mars Rovers/src/Rover.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Mars Rovers/src/Rover.java b/../Mars Rovers/src/Rover.java
new file mode 100644
--- /dev/null	(date 1614207601622)
+++ b/../Mars Rovers/src/Rover.java	(date 1614207601622)
@@ -0,0 +1,40 @@
+
+public class Rover {
+	//Atributes
+	static private final int roverSize = ControlPanel.getUnitsSize();
+	private int roverCoordX;
+	private int roverCoordY;
+	private char roverDirection = 'N';
+
+	//Constructor
+	public Rover (int roverCoordX, int roverCoordY, char roverDirection) {
+		this.roverCoordX = roverCoordX;
+		this.roverCoordY = roverCoordY;
+		this.roverDirection = roverDirection;
+	}
+
+	//Getters and setters
+	public int getRoverCoordX () {
+		return roverCoordX;
+	}
+
+	public void setRoverCoordX (int roverCoordX) {
+		this.roverCoordX = roverCoordX;
+	}
+
+	public int getRoverCoordY () {
+		return roverCoordY;
+	}
+
+	public void setRoverCoordY (int roverCoordY) {
+		this.roverCoordY = roverCoordY;
+	}
+
+	public char getRoverDirection () {
+		return roverDirection;
+	}
+
+	public void setRoverDirection (char roverDirection) {
+		this.roverDirection = roverDirection;
+	}
+}
Index: ../Mars Rovers/src/RoverControl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Mars Rovers/src/RoverControl.java b/../Mars Rovers/src/RoverControl.java
new file mode 100644
--- /dev/null	(date 1614209712689)
+++ b/../Mars Rovers/src/RoverControl.java	(date 1614209712689)
@@ -0,0 +1,8 @@
+public class RoverControl {
+
+	public static void main (String[] args) {
+
+		new GpsFrame();
+		new CommandInput();
+	}
+}
